{"version":3,"sources":["screens/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Home","useState","output","setOutput","input","setInput","code","setCode","loading","setLoading","submit","a","fetch","server","backend","method","headers","body","JSON","stringify","res","text","result","message","className","style","background","id","height","theme","language","options","onChange","value","onClick","disabled","size","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"g4DAOe,SAASA,IAAQ,IAAD,EACFC,mBAAS,IADP,mBACvBC,EADuB,KACfC,EADe,OAEJF,mBAAS,IAFL,mBAEvBG,EAFuB,KAEhBC,EAFgB,OAGNJ,mBAAS,2EAHH,mBAGvBK,EAHuB,KAGjBC,EAHiB,OAMAN,oBAAS,GANT,mBAMvBO,EANuB,KAMdC,EANc,KAOxBC,EAAM,uCAAG,gCAAAC,EAAA,6DACdF,GAAW,GACXN,EAAU,IAFI,kBAIKS,MAAMC,EAAOC,QAAS,CACvCC,OAAQ,OACRC,QAAS,CACR,eAAgB,oBAEjBC,KAAMC,KAAKC,UAAU,CACpBb,OACAF,YAXW,cAIPgB,EAJO,gBAcQA,EAAIC,OAdZ,OAcPC,EAdO,OAebnB,EAAUmB,GAfG,kDAiBbnB,EAAS,UAAC,KAAIoB,eAAL,QAAgB,gBAjBZ,yBAmBbd,GAAW,GAnBE,6EAAH,qDAsBZ,OACC,sBACCe,UAAU,2BACVC,MAAO,CACNC,WAAY,WAHd,UAMC,qBAAKC,GAAG,mBAAmBH,UAAU,YAArC,SACC,cAAC,IAAD,CACCI,OAAO,OACPC,MAAM,UACNC,SAAS,MACTC,QAASA,EACTC,SAAU,SAACC,GAAD,OAAW1B,EAAQ0B,IAC7BA,MAAO3B,MAGT,sBAAKkB,UAAU,mCAAf,UACC,cAAC,IAAD,CACCI,OAAO,OACPC,MAAM,UACNI,MAAO7B,EACP4B,SAAU,SAACC,GAAD,OAAW5B,EAAS4B,MAE/B,wBACCN,GAAG,UACHH,UAAS,iIAINhB,EAAU,UAAY,GAJhB,gBAMT0B,QAASxB,EACTyB,SAAU3B,EATX,SAWGA,EAKD,kDACW,cAAC,IAAD,CAAQ4B,KAAM,GAAIZ,UAAU,YALvC,4CACK,cAAC,IAAD,CAAMY,KAAM,GAAIZ,UAAU,cAQjC,cAAC,IAAD,CAAcI,OAAO,OAAOC,MAAM,UAAUI,MAAO/B,U,MC3ExC,SAASmC,IACvB,OACC,cAAC,IAAD,UACC,cAAC,IAAD,UACC,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWxC,QCVrC,IAYeyC,EAZS,SAACC,GACpBA,GAAeA,aAAuBC,UACzC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC5DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,YCEXQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAMzBb,M","file":"static/js/main.546d05f1.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport MonacoEditor from \"@monaco-editor/react\";\nimport { Play, Loader } from \"react-feather\";\n\nimport options from \"../config/editor.json\";\nimport server from \"../config/server.json\";\n\nexport default function Home() {\n\tconst [output, setOutput] = useState(\"\");\n\tconst [input, setInput] = useState(\"\");\n\tconst [code, setCode] = useState(\n\t\t`#include <iostream>\\n\\nint main(){\\n\tstd::cout << \"Hello World\\\\n\";\\n}`\n\t);\n\tconst [loading, setLoading] = useState(false);\n\tconst submit = async () => {\n\t\tsetLoading(true);\n\t\tsetOutput(\"\");\n\t\ttry {\n\t\t\tconst res = await fetch(server.backend, {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tcode,\n\t\t\t\t\tinput,\n\t\t\t\t}),\n\t\t\t});\n\t\t\tconst result = await res.text();\n\t\t\tsetOutput(result);\n\t\t} catch (err) {\n\t\t\tsetOutput(err.message ?? \"Server Error\");\n\t\t} finally {\n\t\t\tsetLoading(false);\n\t\t}\n\t};\n\treturn (\n\t\t<div\n\t\t\tclassName=\"flex h-full items-center\"\n\t\t\tstyle={{\n\t\t\t\tbackground: \"#1e1e1e\",\n\t\t\t}}\n\t\t>\n\t\t\t<div id=\"editor-container\" className=\"w-2/3 p-2\">\n\t\t\t\t<MonacoEditor\n\t\t\t\t\theight=\"90vh\"\n\t\t\t\t\ttheme=\"vs-dark\"\n\t\t\t\t\tlanguage=\"cpp\"\n\t\t\t\t\toptions={options}\n\t\t\t\t\tonChange={(value) => setCode(value)}\n\t\t\t\t\tvalue={code}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"w-1/3 flex flex-col items-center\">\n\t\t\t\t<MonacoEditor\n\t\t\t\t\theight=\"40vh\"\n\t\t\t\t\ttheme=\"vs-dark\"\n\t\t\t\t\tvalue={input}\n\t\t\t\t\tonChange={(value) => setInput(value)}\n\t\t\t\t/>\n\t\t\t\t<button\n\t\t\t\t\tid=\"run-btn\"\n\t\t\t\t\tclassName={`\n\t\t\t\t\t\tflex pl-4 pr-3 py-1\n\t\t\t\t\t\tm-4 rounded-md text-lg\n\t\t\t\t\t\titems-center shadow-lg\n\t\t\t\t\t\t${loading ? \"loading\" : \"\"}\n\t\t\t\t\t`}\n\t\t\t\t\tonClick={submit}\n\t\t\t\t\tdisabled={loading}\n\t\t\t\t>\n\t\t\t\t\t{!loading ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\tRun <Play size={18} className=\"ml-1\" />\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\tExecuting <Loader size={18} className=\"ml-2\" />\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</button>\n\t\t\t\t<MonacoEditor height=\"40vh\" theme=\"vs-dark\" value={output} />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Home from \"./screens/Home\";\nimport \"./App.scss\";\n\nexport default function App() {\n\treturn (\n\t\t<Router>\n\t\t\t<Switch>\n\t\t\t\t<Route exact path=\"/\" component={Home} />\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n}\n","const reportWebVitals = (onPerfEntry) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"tailwindcss/tailwind.css\";\nimport \"./index.css\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}